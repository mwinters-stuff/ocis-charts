{{- include "ocis.appNames" (dict "scope" . "appName" "appNameAudit" "appNameSuffix" "") -}}
{{- $_ := set . "resources" (default (default (dict) .Values.resources) .Values.services.audit.resources) -}}
apiVersion: apps/v1
kind: Deployment
{{ include "ocis.metadata" . }}
spec:
  {{- include "ocis.selector" . | nindent 2 }}
  {{- if and (not .Values.autoscaling.enabled) (.Values.replicas) }}
  replicas: {{ .Values.replicas }}
  {{- end }}
  {{- if .Values.deploymentStrategy }}
  strategy: {{ toYaml .Values.deploymentStrategy | nindent 4 }}
  {{ end }}
  template:
    metadata:
      labels:
        app: {{ .appName }}
        {{- include "ocis.labels" . | nindent 8 }}
    spec:
      {{- include "ocis.securityContextAndtopologySpreadConstraints" . | nindent 6 }}
      containers:
        - name: {{ .appName }}
          image: {{ template "ocis.image" $ }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["ocis"]
          args: ["audit", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: {{ .Values.securityContext.runAsUser }}
            runAsGroup: {{ .Values.securityContext.runAsGroup }}
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: kubernetes

            - name: AUDIT_LOG_COLOR
              value: {{ .Values.logging.color | quote }}
            - name: AUDIT_LOG_LEVEL
              value: {{ .Values.logging.level | quote }}
            - name: AUDIT_LOG_PRETTY
              value: {{ .Values.logging.pretty | quote }}

            - name: AUDIT_EVENTS_ENDPOINT
            {{- if not .Values.messagingSystem.external.enabled }}
              value: {{ .appNameNats }}:9233
            {{- else }}
              value: {{ .Values.messagingSystem.external.endpoint | quote }}
            - name: AUDIT_EVENTS_CLUSTER
              value: {{ .Values.messagingSystem.external.cluster | quote }}
            - name: AUDIT_EVENTS_ENABLE_TLS
              value: {{ .Values.messagingSystem.external.tls.enabled | quote }}
            - name: AUDIT_EVENTS_TLS_INSECURE
              value: {{ .Values.messagingSystem.external.tls.insecure | quote }}
            - name: AUDIT_EVENTS_TLS_ROOT_CA_CERTIFICATE
              {{- if not .Values.messagingSystem.external.tls.certTrusted }}
              value: /etc/ocis/messaging-system-ca/messaging-system-ca.crt
              {{- else }}
              value: "" # no cert needed
              {{- end }}
            {{- end }}

            - name: AUDIT_LOG_TO_CONSOLE
              value: "true"

          resources: {{ toYaml .resources | nindent 12 }}

          volumeMounts:
            - name: ocis-config-tmp
              mountPath: /etc/ocis # we mount that volume only to apply fsGroup to that path
            - name: messaging-system-ca
              mountPath: /etc/ocis/messaging-system-ca
              readOnly: true

      {{- include "ocis.imagePullSecrets" $ | nindent 6 }}
      volumes:
        - name: ocis-config-tmp
          emptyDir: {}
        - name: messaging-system-ca
          {{ if and (.Values.messagingSystem.external.enabled) (not .Values.messagingSystem.external.tls.certTrusted) }}
          secret:
            secretName: {{ .Values.secretRefs.messagingSystemCaRef }}
          {{ else }}
          emptyDir: {}
          {{ end }}

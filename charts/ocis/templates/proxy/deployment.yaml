{{- include "ocis.appNames" (dict "scope" . "appName" "appNameProxy" "appNameSuffix" "") -}}
{{- $_ := set . "resources" (default (default (dict) .Values.resources) .Values.services.proxy.resources) -}}
apiVersion: apps/v1
kind: Deployment
{{ include "ocis.metadata" . }}
spec:
  {{- include "ocis.selector" . | nindent 2 }}
  {{- if and (not .Values.autoscaling.enabled) (.Values.replicas) }}
  replicas: {{ .Values.replicas }}
  {{- end }}
  {{- if .Values.deploymentStrategy }}
  strategy: {{ toYaml .Values.deploymentStrategy | nindent 4 }}
  {{ end }}
  template:
    metadata:
      labels:
        app: {{ .appName }}
        {{- include "ocis.labels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/proxy/config.yaml") . | sha256sum }}
    spec:
      {{- include "ocis.securityContextAndtopologySpreadConstraints" . | nindent 6 }}
      containers:
        - name: {{ .appName }}
          image: {{ template "ocis.image" $ }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["ocis"]
          args: ["proxy", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: {{ .Values.securityContext.runAsUser }}
            runAsGroup: {{ .Values.securityContext.runAsGroup }}
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: kubernetes

            - name: PROXY_LOG_COLOR
              value: {{ .Values.logging.color | quote }}
            - name: PROXY_LOG_LEVEL
              value: {{ .Values.logging.level | quote }}
            - name: PROXY_LOG_PRETTY
              value: {{ .Values.logging.pretty | quote }}

            - name: PROXY_DEBUG_PPROF
              value: {{ .Values.debug.profiling | quote }}

            - name: PROXY_HTTP_ADDR
              value: 0.0.0.0:9200
            - name: PROXY_DEBUG_ADDR
              value: 0.0.0.0:9205

            - name: PROXY_ENABLE_BASIC_AUTH
              value: {{ .Values.features.basicAuthentication | quote }}

            - name: PROXY_OIDC_ISSUER
            {{- if not .Values.features.externalUserManagement.enabled }}
              value: "https://{{ .Values.externalDomain }}"
            {{- else }}
              value: {{ .Values.features.externalUserManagement.oidc.issuerURI | quote }}
            {{- end }}

            {{- if .Values.features.externalUserManagement.enabled }}
            - name: PROXY_OIDC_REWRITE_WELLKNOWN
              value: "true"
            - name: PROXY_OIDC_ACCESS_TOKEN_VERIFY_METHOD
              value: "none"
            - name: PROXY_USER_OIDC_CLAIM
              value: {{ .Values.features.externalUserManagement.oidc.userIDClaim | quote }}
            - name: PROXY_USER_CS3_CLAIM
              value: {{ .Values.features.externalUserManagement.oidc.userIDClaimAttributeMapping | quote }}
            {{- end }}

            - name: PROXY_TLS
              value: "false"

            - name: REVA_GATEWAY
              value: {{ .appNameGateway }}:9142

            - name: PROXY_OIDC_INSECURE
              value: {{ .Values.insecure.oidcIdpInsecure | quote }}

            - name: PROXY_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretRefs.jwtSecretRef }}
                  key: jwt-secret

            - name: PROXY_MACHINE_AUTH_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretRefs.machineAuthApiKeySecretRef }}
                  key: machine-auth-api-key

          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: {{ toYaml .resources | nindent 12 }}

          ports:
            - name: http
              containerPort: 9200
            - name: metrics-debug
              containerPort: 9205

          volumeMounts:
            - name: configs
              mountPath: /etc/ocis

      {{- include "ocis.imagePullSecrets" $ | nindent 6 }}
      volumes:
        - name: configs
          configMap:
            name: {{ .appName }}-config

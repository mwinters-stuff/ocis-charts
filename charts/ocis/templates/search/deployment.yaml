{{- include "ocis.appNames" (dict "scope" . "appName" "appNameSearch" "appNameSuffix" "") -}}
{{- $_ := set . "resources" (default (default (dict) .Values.resources) .Values.services.search.resources) -}}
apiVersion: apps/v1
kind: Deployment
{{ include "ocis.metadata" . }}
spec:
  {{- include "ocis.selector" . | nindent 2 }}
  replicas: 1 #TODO: https://github.com/owncloud/ocis-charts/issues/15
  {{- if .Values.deploymentStrategy }}
  strategy: {{ toYaml .Values.deploymentStrategy | nindent 4 }}
  {{ end }}
  template:
    {{- include "ocis.templateMetadata" (dict "scope" $ "configCheck" false) | nindent 4 }}
    spec:
      {{- include "ocis.securityContextAndtopologySpreadConstraints" . | nindent 6 }}
      {{- if and $.Values.services.search.persistence.enabled $.Values.services.search.persistence.chownInitContainer }}
      initContainers:
        - name: init-chown-data
          image: busybox
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          command: ["chown", "-R", "{{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.runAsGroup }}", "/var/lib/ocis"]
          volumeMounts:
          - name: search-data
            mountPath: /var/lib/ocis
      {{ end }}
      containers:
        - name: {{ .appName }}
          image: {{ template "ocis.image" $ }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["ocis"]
          args: ["search", "server"]
          {{- include "ocis.containerSecurityContext" . | nindent 10 }}
          env:
            - name: MICRO_REGISTRY
              value: kubernetes

            - name: SEARCH_LOG_COLOR
              value: {{ .Values.logging.color | quote }}
            - name: SEARCH_LOG_LEVEL
              value: {{ .Values.logging.level | quote }}
            - name: SEARCH_LOG_PRETTY
              value: {{ .Values.logging.pretty | quote }}

            - name: SEARCH_DEBUG_PPROF
              value: {{ .Values.debug.profiling | quote }}

            - name: SEARCH_GRPC_ADDR
              value: 0.0.0.0:9220
            - name: SEARCH_DEBUG_ADDR
              value: 0.0.0.0:9224

            - name: REVA_GATEWAY
              value: {{ .appNameGateway }}:9142
            - name: SEARCH_EVENTS_ENDPOINT
            {{- if not .Values.messagingSystem.external.enabled }}
              value: {{ .appNameNats }}:9233
            {{- else }}
              value: {{ .Values.messagingSystem.external.endpoint }}
            - name: SEARCH_EVENTS_CLUSTER
              value: {{ .Values.messagingSystem.external.cluster }}
            - name: SEARCH_EVENTS_ENABLE_TLS
              value: {{ .Values.messagingSystem.external.tls.enabled | quote }}
            - name: SEARCH_EVENTS_TLS_INSECURE
              value: {{ .Values.messagingSystem.external.tls.insecure | quote }}
            - name: SEARCH_EVENTS_TLS_ROOT_CA_CERTIFICATE
              {{- if not .Values.messagingSystem.external.tls.certTrusted }}
              value: /etc/ocis/messaging-system-ca/messaging-system-ca.crt
              {{- else }}
              value: "" # no cert needed
              {{- end }}
            {{- end }}



            {{- if  eq .Values.services.search.extractor.type "tika" }}
            - name: SEARCH_EXTRACTOR_TYPE
              value: tika

            - name: SEARCH_EXTRACTOR_TIKA_TIKA_URL
              value: {{ .Values.services.search.extractor.tika.url | quote }}
            {{- else }}
            - name: SEARCH_EXTRACTOR_TYPE
              value: basic
            {{- end }}

            - name: SEARCH_EXTRACTOR_CS3SOURCE_INSECURE
              value: {{ .Values.insecure.ocisHttpApiInsecure | quote }}

            - name: SEARCH_MACHINE_AUTH_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretRefs.machineAuthApiKeySecretRef }}
                  key: machine-auth-api-key

            - name: OCIS_ASYNC_UPLOADS
              value: "true"

          {{- include "ocis.livenessProbe" . | nindent 10 }}

          resources: {{ toYaml .resources | nindent 12 }}

          ports:
            - name: grpc
              containerPort: 9220
            - name: metrics-debug
              containerPort: 9224

          volumeMounts:
            - name: ocis-config-tmp
              mountPath: /etc/ocis # we mount that volume only to apply fsGroup to that path
            - name: messaging-system-ca
              mountPath: /etc/ocis/messaging-system-ca
              readOnly: true
            - name: search-data
              mountPath: /var/lib/ocis

      {{- include "ocis.imagePullSecrets" $ | nindent 6 }}
      volumes:
        - name: ocis-config-tmp
          emptyDir: {}
        - name: messaging-system-ca
          {{ if and (.Values.messagingSystem.external.enabled) (not .Values.messagingSystem.external.tls.certTrusted) }}
          secret:
            secretName: {{ .Values.secretRefs.messagingSystemCaRef }}
          {{ else }}
          emptyDir: {}
          {{ end }}
        - name: search-data
          {{ if .Values.services.search.persistence.enabled }}
          persistentVolumeClaim:
            {{ if .Values.services.search.persistence.existingClaim }}
            claimName: {{ .Values.services.search.persistence.existingClaim }}
            {{ else }}
            claimName: {{ .appName }}-data
            {{ end }}
          {{ else }}
          emptyDir: {}
          {{ end }}
